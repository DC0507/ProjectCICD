name: Deploy DotNet project to Azure Function App
 
on:
  push:
    branches: ["main"]
 
env:
  AZURE_FUNCTIONAPP_NAME: 'fa-isolated-test-tif'   # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'       # set this to the path to your function app project, defaults to the repository root
  DOTNET_VERSION: '8.0.x'                   # set this to the dotnet version to use (e.g. '2.1.x', '3.1.x', '5.0.x')
  CONFIGURATION: 'Release'
  WORKING_DIRECTORY: '.'
 
jobs:
  build:
    runs-on: windows-latest # For Linux, use ubuntu-latest
    #environment: dev
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4
 
    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
 
    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: pwsh # For Linux, use bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build ./LAbCICDPippeline.csproj --configuration Release  --output ./build
        popd
    #- name: Publish
    #  run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"
   
    # List al the artifacts in package output directory
    - name: List output directory
      run: ls -R '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/build'
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: ./build
 
